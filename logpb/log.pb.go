// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logpb/log.proto

package log

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type TransferRequest struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	LogData              []byte   `protobuf:"bytes,4,opt,name=logData,proto3" json:"logData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferRequest) Reset()         { *m = TransferRequest{} }
func (m *TransferRequest) String() string { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()    {}
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8b9aa51c3c42db, []int{0}
}

func (m *TransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferRequest.Unmarshal(m, b)
}
func (m *TransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferRequest.Marshal(b, m, deterministic)
}
func (m *TransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferRequest.Merge(m, src)
}
func (m *TransferRequest) XXX_Size() int {
	return xxx_messageInfo_TransferRequest.Size(m)
}
func (m *TransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferRequest proto.InternalMessageInfo

func (m *TransferRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *TransferRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *TransferRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *TransferRequest) GetLogData() []byte {
	if m != nil {
		return m.LogData
	}
	return nil
}

// The response message containing the greetings
type TransferReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferReply) Reset()         { *m = TransferReply{} }
func (m *TransferReply) String() string { return proto.CompactTextString(m) }
func (*TransferReply) ProtoMessage()    {}
func (*TransferReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8b9aa51c3c42db, []int{1}
}

func (m *TransferReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferReply.Unmarshal(m, b)
}
func (m *TransferReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferReply.Marshal(b, m, deterministic)
}
func (m *TransferReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferReply.Merge(m, src)
}
func (m *TransferReply) XXX_Size() int {
	return xxx_messageInfo_TransferReply.Size(m)
}
func (m *TransferReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferReply.DiscardUnknown(m)
}

var xxx_messageInfo_TransferReply proto.InternalMessageInfo

func (m *TransferReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *TransferReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*TransferRequest)(nil), "TransferRequest")
	proto.RegisterType((*TransferReply)(nil), "TransferReply")
}

func init() { proto.RegisterFile("logpb/log.proto", fileDescriptor_ac8b9aa51c3c42db) }

var fileDescriptor_ac8b9aa51c3c42db = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xc9, 0x4f, 0x2f,
	0x48, 0xd2, 0xcf, 0xc9, 0x4f, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xca, 0xe4, 0xe2, 0x0f,
	0x29, 0x4a, 0xcc, 0x2b, 0x4e, 0x4b, 0x2d, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12,
	0xe1, 0x62, 0xcd, 0x49, 0x4c, 0x4a, 0xcd, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70,
	0x84, 0x84, 0xb8, 0x58, 0x32, 0xf2, 0x8b, 0x4b, 0x24, 0x98, 0xc0, 0x82, 0x60, 0x36, 0x48, 0xac,
	0x20, 0xb1, 0x24, 0x43, 0x82, 0x19, 0x22, 0x06, 0x62, 0x0b, 0x49, 0x70, 0xb1, 0xe7, 0xe4, 0xa7,
	0xbb, 0x24, 0x96, 0x24, 0x4a, 0xb0, 0x28, 0x30, 0x6a, 0xf0, 0x04, 0xc1, 0xb8, 0x4a, 0xd6, 0x5c,
	0xbc, 0x08, 0xab, 0x0a, 0x72, 0x2a, 0x41, 0x4a, 0x8b, 0x4b, 0x93, 0x93, 0x53, 0x8b, 0x8b, 0xc1,
	0x56, 0x71, 0x04, 0xc1, 0xb8, 0x42, 0x02, 0x5c, 0xcc, 0xb9, 0xc5, 0xe9, 0x50, 0xbb, 0x40, 0x4c,
	0x23, 0x53, 0x2e, 0x66, 0x9f, 0xfc, 0x74, 0x21, 0x3d, 0x2e, 0x0e, 0x98, 0x19, 0x42, 0x02, 0x7a,
	0x68, 0x2e, 0x97, 0xe2, 0xd3, 0x43, 0xb1, 0x40, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x4b, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x87, 0x3a, 0x52, 0xf8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogClient is the client API for Log service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogClient interface {
	// send a log
	Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferReply, error)
}

type logClient struct {
	cc *grpc.ClientConn
}

func NewLogClient(cc *grpc.ClientConn) LogClient {
	return &logClient{cc}
}

func (c *logClient) Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferReply, error) {
	out := new(TransferReply)
	err := c.cc.Invoke(ctx, "/Log/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogServer is the server API for Log service.
type LogServer interface {
	// send a log
	Transfer(context.Context, *TransferRequest) (*TransferReply, error)
}

func RegisterLogServer(s *grpc.Server, srv LogServer) {
	s.RegisterService(&_Log_serviceDesc, srv)
}

func _Log_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Log/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).Transfer(ctx, req.(*TransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Log_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Log",
	HandlerType: (*LogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Transfer",
			Handler:    _Log_Transfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logpb/log.proto",
}
